name: Test
on:
  pull_request:
    paths:
      - '**.swift'
      - '**.h'
      - '**.m'
      - '.github/workflows/test.yml'
      - 'versions.json'
concurrency: 
  group: ${{ github.ref }}
  cancel-in-progress: true
jobs:
  generate-matrix:
    name: Generate matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
      - id: set-matrix
        run: |
          matrix=$(cat versions.json | jq -c .)
          echo "::set-output name=matrix::$matrix"
  xcodebuild:
    name: via xcodebuild
    needs: generate-matrix
    runs-on: macOS-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    env:
      DEVELOPER_DIR: /Applications/Xcode_${{ matrix.xcode_version }}.app/Contents/Developer
    steps:
      - uses: actions/checkout@v3
      - name: Run Test
        run: |
          xcrun xcodebuild \
            -scheme MockUserDefaults \
            -destination 'platform=macOS' \
            -destination 'platform=macOS,variant=Mac Catalyst' \
            -destination 'platform=iOS Simulator,name=iPhone 11 Pro' \
            -destination 'platform=tvOS Simulator,name=Apple TV' \
            -destination 'platform=watchOS Simulator,name=Apple Watch Series 4 - 40mm' \
            test | xcpretty
  swift_pm:
    name: via SwiftPM
    needs: generate-matrix
    runs-on: macOS-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    env:
      DEVELOPER_DIR: /Applications/Xcode_${{ matrix.xcode_version }}.app/Contents/Developer
    steps:
      - uses: actions/checkout@v3
      - name: Run Test
        run: swift test
